name: default

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.1
      - name: Terraform fmt
        run: terraform fmt -check -recursive
        continue-on-error: true
      - name: Terraform Validate
        run: terraform validate -no-color
  plan:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        workspace: ["staging/wait", "staging/delay"]
    defaults:
      run:
        working-directory: ./workspaces/${{ matrix.workspace }}
    steps:
      - uses: actions/checkout@v2
      - name: Set workspace safe name
        run: |
          echo workspace_safe=${{ matrix.workspace }} | sed "s/\//-/g" >> $GITHUB_ENV
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.1
      - name: Terraform init
        id: init
        run: terraform init
      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -out=tfplan-${{ env.workspace_safe }}
        continue-on-error: false
      - name: Upload plan artifact
        uses: actions/upload-artifact@v1
        if: github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main'
        with:
          name: tfplan-${{ env.workspace_safe }}
          path: ./workspaces/${{ matrix.workspace }}/tfplan-${{ env.workspace_safe }}
      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workspace: \`${{ matrix.workspace }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
  apply:
    runs-on: ubuntu-latest
    needs: plan
    if: github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main'
    strategy:
      matrix:
        workspace: ["staging/wait", "staging/delay"]
    defaults:
      run:
        working-directory: ./workspaces/${{ matrix.workspace }}
    steps:
      - uses: actions/checkout@v1
      - name: Set workspace safe name
        run: |
          echo workspace_safe=${{ matrix.workspace }} | sed "s/\//-/g" >> $GITHUB_ENV
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.1
      - name: Download plan artifact
        uses: actions/download-artifact@v1
        with:
          name: tfplan-${{ env.workspace_safe }}
          path: ./workspaces/${{ matrix.workspace }}/
      - name: Terraform init
        run: terraform init
      - name: Terraform apply
        run: terraform apply tfplan-${{ env.workspace_safe }}
